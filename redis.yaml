#这里做了个静态的nfs存储做持久化
apiVersion: v1
kind: Namespace
metadata:
  name: redis-server
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: redis-storage
reclaimPolicy: Retain
volumeBindingMode: Immediate
provisioner: kubernetes.io/no-provisioner
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: redis-volume
  labels:
    type: nfs
spec:
  storageClassName: redis-storage
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  nfs:
    path: /some/container/path/redis
    server: 139.224.132.234
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
spec:
  storageClassName: redis-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---

apiVersion: apps/v1
kind: StatefulSet 
metadata:
  name: redis-sts
spec:
  selector:
    matchLabels:
      app: redis
  serviceName: redis-service
  template:   
    metadata:
      labels:
        app: redis
    spec:
      containers: 
        - image: redis:latest
          name: redis-con
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 6379
              name: redis-port
          volumeMounts:
          - mountPath: /data
            name: redis-storage
          - mountPath: /usr/local/etc/redis/
            name: redis-conf
          args: ["/usr/local/etc/redis/redis.conf"] 
          securityContext:
            privileged: true
      volumes:
      - name: redis-storage
        persistentVolumeClaim:
          claimName: redis-pvc
      - name: redis-conf
        configMap:
          name: redis-config-map
          items:
          - key: redis.conf
            path: redis.conf
          
---

apiVersion: v1
kind: Service
metadata:
  name: redis-service
  labels:
    app: redis
spec:
  type: NodePort
  selector:
      app: redis
  ports:
  - protocol : TCP
    nodePort: 32379
    port: 6379
    targetPort: 6379 

